//
//  MobileAnalyticsViewController.m
//  MySampleApp
//
//
// Copyright 2015 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.
//
// Code generated by AWS Mobile Hub. Amazon gives unlimited permission to 
// copy, distribute and modify it.
//

#import "AWSMobileClient.h"
#import "AWSMobileAnalytics/AWSMobileAnalytics.h"
#import "MobileAnalyticsViewController.h"

@interface MobileAnalyticsViewController ()

@end

@implementation MobileAnalyticsViewController

#pragma mark - UIViewController

- (void)viewDidLoad {
    [super viewDidLoad];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - IBActions

- (IBAction)clickedCustomEvent:(id)sender {
    id<AWSMobileAnalyticsEventClient> eventClient =
        [[[AWSMobileClient sharedInstance] mobileAnalytics] eventClient];
    
    id<AWSMobileAnalyticsEvent> event =
        [eventClient createEventWithEventType:@"DemoCustomEvent"];

    [event addAttribute:@"DemoAttributeValue1" forKey:@"DemoAttribute1"];
    [event addAttribute:@"DemoAttributeValue2" forKey:@"DemoAttribute2"];
    [event addMetric:[NSNumber numberWithInt:(arc4random() % 65535)] forKey:@"DemoMetric"];
    [eventClient recordEvent:event];
    
    dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_BACKGROUND, 0), ^(void) {
        [eventClient submitEvents];
    });

    UIAlertView* alertView =
    [[UIAlertView alloc] initWithTitle:NSLocalizedString(@"EVENT SUBMITTED", @"Title bar for alert dialog about an event.")
                               message:[MobileAnalyticsViewController prettyPrintEvent:event]
                              delegate:nil
                     cancelButtonTitle:NSLocalizedString(@"OK", @"Button on alert dialog.")
                     otherButtonTitles:nil];
    [alertView show];
}

- (IBAction)clickedMonetizationEvent:(id)sender {
    id<AWSMobileAnalyticsEventClient> eventClient =
        [[[AWSMobileClient sharedInstance] mobileAnalytics] eventClient];
    
    AWSMobileAnalyticsAppleMonetizationEventBuilder*
        eventBuilder =
        [AWSMobileAnalyticsAppleMonetizationEventBuilder builderWithEventClient:eventClient];
    
    [eventBuilder withProductId:@"DEMO_PRODUCT_ID"];
    [eventBuilder withItemPrice:1.00 andPriceLocale:[NSLocale localeWithLocaleIdentifier:@"en_US"]];
    [eventBuilder withQuantity:1];
    [eventBuilder withTransactionId:@"DEMO_TRANSACTION_ID"];
    
    id<AWSMobileAnalyticsEvent> event = [eventBuilder build];
    [eventClient recordEvent:event];
    
    dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_BACKGROUND, 0), ^(void) {
        [eventClient submitEvents];
    });
    
    UIAlertView* alertView =
    [[UIAlertView alloc] initWithTitle:NSLocalizedString(@"EVENT SUBMITTED", @"Title bar for alert dialog about an event.")
                               message:[MobileAnalyticsViewController prettyPrintEvent:event]
                              delegate:nil
                     cancelButtonTitle:NSLocalizedString(@"OK", @"Button on alert dialog.")
                     otherButtonTitles:nil];
    [alertView show];
}

#pragma mark - Utility Methods

+ (NSString*)prettyPrintEvent:(id<AWSMobileAnalyticsEvent>)event {
    return [NSString stringWithFormat:@"EVENT TYPE : %@\nATTRIBUTES : %@\nMETRICS : %@",[event eventType],[event allAttributes],[event allMetrics]];
}

@end
