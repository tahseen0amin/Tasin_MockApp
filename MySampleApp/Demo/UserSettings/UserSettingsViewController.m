//
// UserSettingsViewController.m
//
//
// Copyright 2015 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.
//
// Code generated by AWS Mobile Hub. Amazon gives unlimited permission to 
// copy, distribute and modify it.
//

#import <Foundation/Foundation.h>
#import "UserSettingsViewController.h"
#import "ColorThemeSettings.h"
#import <AWSCore/AWSCore.h>
#import <AWSCognito/AWSCognitoSyncService.h>

@interface UserSettingsViewController ()

@property (nonatomic) UIAlertView *userSettingsAlertView;
@property (nonatomic, copy) void (^loadSettingsBlock)(ColorThemeSettings *, NSError *error);
@property (nonatomic) NSArray *themes;

@end

@implementation UserSettingsViewController

#pragma mark - UIViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    
    Theme *theme0 = [[Theme alloc] initWithTitleTextColor:0xFFFFFFFF
                                        withTitleBarColor:0xFFF58535
                                      withBackgroundColor:0xFFFFFFFF];
    Theme *theme1 = [[Theme alloc] initWithTitleTextColor:0xFFDDDDDD
                                        withTitleBarColor:0xFF00D2FF
                                      withBackgroundColor:0xFFEEEEEE];
    Theme *theme2 = [[Theme alloc] initWithTitleTextColor:0xFFFFFFFF
                                        withTitleBarColor:0xFF00D2A9
                                      withBackgroundColor:0xFFC8FFFF];
    Theme *theme3 = [[Theme alloc] initWithTitleTextColor:0xFFFFFF00
                                        withTitleBarColor:0xFF000000
                                      withBackgroundColor:0xFFFFFFDC];
    self.themes = @[theme0, theme1, theme2, theme3];
}

#pragma mark - IBActions

- (IBAction)handlerSettings0:(id)sender {
    [self updateAppearanceWithTheme:self.themes[0]];
    [self saveAppearance:self.themes[0]];
}

- (IBAction)handlerSettings1:(id)sender {
    [self updateAppearanceWithTheme:self.themes[1]];
    [self saveAppearance:self.themes[1]];
}

- (IBAction)handlerSettings2:(id)sender {
    [self updateAppearanceWithTheme:self.themes[2]];
    [self saveAppearance:self.themes[2]];
}

- (IBAction)handlerSettings3:(id)sender {
    [self updateAppearanceWithTheme:self.themes[3]];
    [self saveAppearance:self.themes[3]];
}

#pragma mark - Utility Methods

- (void)updateAppearanceWithTheme:(Theme *)theme {
    UIColor *titleTextColor = UIColorFromARGB(theme.titleTextColor);
    self.navigationController.navigationBar.barTintColor = UIColorFromARGB(theme.titleBarColor);
    self.navigationController.navigationBar.tintColor = titleTextColor;
    [self.navigationController.navigationBar setTitleTextAttributes: @{ NSForegroundColorAttributeName : titleTextColor }];
    self.view.backgroundColor = UIColorFromARGB(theme.backgroundColor);
}

- (void)saveAppearance:(Theme *)theme {
    ColorThemeSettings *settings = [ColorThemeSettings sharedInstance];
    settings.theme = theme;
    [settings saveSettings:nil];
}

- (void)showErrorDialog:(const NSError *)error {
    AWSLogError("User Settings Error: %@", error);

    UIAlertController *alertControll = [UIAlertController alertControllerWithTitle:nil
                                                                           message:[NSString stringWithFormat:@"User Settings Error: %@", [error localizedDescription]]
                                                                    preferredStyle:UIAlertControllerStyleAlert];

    UIAlertAction *cancelAction = [UIAlertAction actionWithTitle:@"Okay"
                                                           style:UIAlertActionStyleCancel
                                                         handler:nil];
    [alertControll addAction:cancelAction];

    [self presentViewController:alertControll
                       animated:YES
                     completion:nil];
}

@end
